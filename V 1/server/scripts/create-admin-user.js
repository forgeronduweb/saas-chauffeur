const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
require('dotenv').config();

const User = require('../models/User');

async function createAdminUser() {
  try {
    console.log('üîê Cr√©ation du compte administrateur...');
    
    // Connexion √† la base de donn√©es
    await mongoose.connect(process.env.MONGO_URI);
    console.log('‚úÖ Connect√© √† MongoDB Atlas');

    // V√©rifier si l'admin existe d√©j√†
    const existingAdmin = await User.findOne({ email: 'bahophilomeevrard@gmail.com' });
    
    if (existingAdmin) {
      console.log('‚ö†Ô∏è  L\'utilisateur admin existe d√©j√†');
      
      // Mettre √† jour le mot de passe si n√©cessaire
      const hashedPassword = await bcrypt.hash('Philome98@', 12);
      existingAdmin.password = hashedPassword;
      existingAdmin.role = 'admin';
      existingAdmin.isActive = true;
      existingAdmin.isEmailVerified = true;
      
      await existingAdmin.save();
      console.log('‚úÖ Mot de passe admin mis √† jour');
    } else {
      // Cr√©er le nouvel utilisateur admin
      const hashedPassword = await bcrypt.hash('Philome98@', 12);
      
      const adminUser = new User({
        email: 'bahophilomeevrard@gmail.com',
        password: hashedPassword,
        role: 'admin',
        firstName: 'Philom√©',
        lastName: 'Evrard',
        phone: '+33123456789',
        isActive: true,
        isEmailVerified: true
      });

      await adminUser.save();
      console.log('‚úÖ Compte administrateur cr√©√© avec succ√®s');
    }

    console.log('\nüìã Informations de connexion admin :');
    console.log('   Email: bahophilomeevrard@gmail.com');
    console.log('   Mot de passe: Philome98@');
    console.log('   R√¥le: admin');
    
    console.log('\nüåê Vous pouvez maintenant vous connecter sur :');
    console.log('   http://localhost:3001/login');

  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation de l\'admin:', error.message);
    
    if (error.code === 11000) {
      console.log('üí° L\'email existe d√©j√†. Tentative de mise √† jour...');
      
      try {
        const hashedPassword = await bcrypt.hash('Philome98@', 12);
        await User.findOneAndUpdate(
          { email: 'bahophilomeevrard@gmail.com' },
          { 
            password: hashedPassword,
            role: 'admin',
            isActive: true,
            isEmailVerified: true
          }
        );
        console.log('‚úÖ Compte admin mis √† jour avec succ√®s');
      } catch (updateError) {
        console.error('‚ùå Erreur lors de la mise √† jour:', updateError.message);
      }
    }
  } finally {
    await mongoose.connection.close();
    console.log('\nüîå Connexion ferm√©e');
    process.exit(0);
  }
}

// Ex√©cuter la cr√©ation de l'admin
createAdminUser();
